apiVersion: apps/v1
kind: Deployment
metadata:
  name: lab-loki
  namespace: dst-lab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lab-loki
  template:
    metadata:
      labels:
        app: lab-loki
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
      containers:
        - name: lab-loki
          image: grafana/loki:3.5.3
          args:
            - -config.file=/etc/loki/config.yaml
          ports:
            - name: loki-http
              containerPort: 3100
            - name: loki-grpc
              containerPort: 9096
          resources:
            requests:
              cpu: "0.1"
              memory: "128Mi"
            limits:
              cpu: "0.15"
              memory: "254Mi"

          securityContext:
            privileged: true
            runAsUser: 0

          volumeMounts:
            - name: loki-config-volume
              mountPath: /etc/loki/config.yaml
              subPath: config.yaml
            - name: loki-data-volume
              mountPath: /tmp/loki

      volumes:
        - name: loki-config-volume
          configMap:
            name: lab-loki-config
        - name: loki-data-volume
          hostPath:
            path: /home/ubuntu/volumes/loki
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: lab-loki
  namespace: dst-lab
spec:
  type: NodePort
  selector:
    app: lab-loki
  ports:
    - name: loki-http
      port: 3100
      targetPort: 3100
      nodePort: 31100
    - name: loki-grpc
      port: 9096
      targetPort: 3100
      nodePort: 31096
     

